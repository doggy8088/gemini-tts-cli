name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            name: Linux
          - os: windows-latest
            name: Windows
          - os: macos-latest
            name: macOS

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore gemini-tts-cli.csproj

    - name: Build
      run: dotnet build gemini-tts-cli.csproj --configuration Release --no-restore

    - name: Test build artifacts
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          if [ -f "bin/Release/net8.0/gemini-tts-cli.exe" ]; then
            echo "✅ Build artifact found for Windows"
          else
            echo "❌ Build artifact not found for Windows"
            exit 1
          fi
        else
          if [ -f "bin/Release/net8.0/gemini-tts-cli" ] || [ -f "bin/Release/net8.0/gemini-tts-cli.dll" ]; then
            echo "✅ Build artifact found for ${{ matrix.name }}"
          else
            echo "❌ Build artifact not found for ${{ matrix.name }}"
            exit 1
          fi
        fi
      shell: bash

    - name: Test help command (Unix)
      if: runner.os != 'Windows'
      run: |
        timeout 10s dotnet run -- --help || [ $? -eq 124 ]

    - name: Test help command (Windows)
      if: runner.os == 'Windows'
      run: |
        # Use Start-Process with timeout for Windows
        $process = Start-Process -FilePath "dotnet" -ArgumentList "run", "--", "--help" -NoNewWindow -PassThru
        if ($process.WaitForExit(10000)) {
          Write-Host "Help command completed successfully"
        } else {
          $process.Kill()
          Write-Host "Help command timed out (expected behavior)"
        }
      shell: powershell
